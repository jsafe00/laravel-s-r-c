<?php
namespace App\Http\Controllers;

use DummyModelNamespace;
use DummyServiceNamespace;
use Exception;
use Illuminate\Http\Request;

class DummyClass extends Controller
{
	/**
     * @var DummyServiceParameter
     */
    protected $DummyServiceParameter;

    /**
     * DummyModel Constructor
     *
     * @param DummyService $DummyServiceParameter
     *
     */
    public function __construct(DummyService $DummyServiceParameter)
    {
        $this->DummyServiceParameter = $DummyServiceParameter;
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $result = ['status' => 200];

        try {
            $result['data'] = $this->DummyServiceParameter->getAll();
        } catch (Exception $e) {
            $result = [
                'status' => 500,
                'error' => $e->getMessage()
            ];
        }

        return response()->json($result, $result['status']);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $data = $request->only([
            //insert your data here
        ]);

        $result = ['status' => 200];

        try {
            $result['data'] = $this->DummyServiceParameter->saveDummyModelData($data);
        } catch (Exception $e) {
            $result = [
                'status' => 500,
                'error' => $e->getMessage()
            ];
        }

        return response()->json($result, $result['status']);
    }

     /**
     * Display the specified resource.
     *
     * @param  id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $result = ['status' => 200];

        try {
            $result['data'] = $this->DummyServiceParameter->getById($id);
        } catch (Exception $e) {
            $result = [
                'status' => 500,
                'error' => $e->getMessage()
            ];
        }
        return response()->json($result, $result['status']);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  DummyModel $DummyModelParameter
     * @return \Illuminate\Http\Response
     */
    public function edit(DummyModel $DummyModelParameter)
    {
        //
    }

    /**
     * Update $DummyServiceParameter.
     *
     * @param Request $request
     * @param id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        $data = $request->only([
            //insert your data here
        ]);

        $result = ['status' => 200];

        try {
            $result['data'] = $this->DummyServiceParameter->updateDummyModel($data, $id);

        } catch (Exception $e) {
            $result = [
                'status' => 500,
                'error' => $e->getMessage()
            ];
        }

        return response()->json($result, $result['status']);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        $result = ['status' => 200];

        try {
            $result['data'] = $this->DummyServiceParameter->deleteById($id);
        } catch (Exception $e) {
            $result = [
                'status' => 500,
                'error' => $e->getMessage()
            ];
        }
        return response()->json($result, $result['status']);
    }
}
